from openerp.osv import osv, fields

class res_partner(osv.osv):
    
    _inherit = "res.partner"
    
    _columns = {
                
                'ext' : fields.char('Ext'),
                'gender' :  fields.selection([('male','Male'),('female','Female')],'Gender'),
                'birth_date' : fields.date('Date of Birth'),
                'decision_maker' : fields.boolean('Decision Maker'),
                'mobile2' : fields.char('Mobile2'),
                'po_box' : fields.char('PO Box'),
                'other_street': fields.text('Other Street'),
                'other_po_box': fields.char('Other Po Box'),
                'other_city' : fields.char('City'),
                'other_state_id' : fields.many2one('res.country.state', 'Other State'),
                'other_postal_code' : fields.char('Other Postal Code'),
                'other_country_id' : fields.many2one('res.country', 'Other Country'),
                'lead_source' : fields.many2one('lead.source','Lead Source'),
                'home_phone' : fields.char('Home Phone'),
                'other_phone' : fields.char('Other Phone'),
                'department' : fields.char('Department'),
                'birth_date' : fields.date('Birthdate'),
                'report_to' : fields.char('Report To'),
                'assistant' : fields.char('Assistant'),
                'yahoo_id' : fields.char('Yahoo Id'),
                'assistant_phone' : fields.char('Assistant Phone'),
                'do_not_call' : fields.boolean('Do Not Call'),
                'email_opt_out' : fields.boolean('Email Opt Out'),
                'reference' : fields.boolean('Reference'),
                'notify_owner' : fields.boolean('Notify Owner'),
                'protal_user' : fields.boolean('Portal User'),
                'support_start_date' : fields.date('Support Start Date'),
                'support_end_date' : fields.date('Support End Date'),
                'contact_image' : fields.binary('Contact Image'),
                'ticker_symbol' : fields.char('Ticker Symbol'),
                'districts_id' : fields.many2one('custom.district','Districts'),
                'generated_by' : fields.many2one('res.partner','Generated By'),
                'business_tower' : fields.char('Business Tower'),
                'approved_finance': fields.boolean('Approved Finance'),
                'federal_gov' : fields.boolean('Fedaral Gov.'),
                'major_account' : fields.boolean('Major Account'),
                'holding_company' : fields.many2one('res.partner','Holding Company'),
                'key_account' : fields.boolean('Key Account'),
		'comp_email':fields.char('Company Email'),
                'subsidiary' : fields.boolean('Subsidiary'),
                'gov_entity_type_id' : fields.many2one('gov.entity.type','Gov. Entity Type'),
                'market_parer' : fields.many2one('market.partner.custome','Market Partner'),
                'vendor_registration' : fields.boolean('Vendor Registration'),
                'reg' : fields.char('Reg#'),
                'other_email' : fields.char('Other Email'),
                'employees' : fields.char('Employees'),
                'ownership' : fields.char('Ownership'),
                'rating' : fields.char('Rating'),
                'industry' : fields.char('Industry'),
                'sic_code' : fields.char('SIC Code'),
                'type1' : fields.char('Type'),
                'annual_revenue' : fields.char('Annual Revenue:(AED)'),
                'gl_account' : fields.many2one('gl.account','GL Account'),
                'hq' : fields.char('HQ'),
                'partner_agreement' : fields.boolean('Partner Agreement'),
                'partner_footprint' : fields.char('Partner Footprint'),
                'marketing_authorization' : fields.boolean('Marketing Authorization'),
                'state' : fields.selection([('draft','Draft'),('review1','Review 1'),('reviewer2','Reviewer 2'),('approver1','Approver 1'),('approver2','Approver 2')], 'State'),
                'member_of' : fields.char('Member Of'),
                'partnering' : fields.text('PARTNERING'),
		'salutation' : fields.many2one('res.salutation','Salutation'),
		'account_name' : fields.char('Account Name'),
                }
    
    _defaults = {
                 'state' : 'draft',
                 }
    
class custom_district(osv.osv):

    _name = "custom.district"
    
    _columns = {
                'name' : fields.char('District'),
                }

class res_salutation(osv.osv):

	_name="res.salutation"

	_columns = {
		'name' : fields.char('Salutation'),
		}

class market_partner_custome(osv.osv):
    
    _name = "market.partner.custome"

    _columns = {
               'name' : fields.char('Market Partner'),
               }
    
class gov_entity_type(osv.osv):
    
    _name = "gov.entity.type"
    
    _columns = {
                'name' : fields.char('Gov. Entity Type'),
                }
    
class lead_source(osv.osv):
    
    _name = "lead.source"
    
    _columns = {
                'name' : fields.char('Lead Source')
                }
